# coding: utf-8

# flake8: noqa

"""
    STACKIT PostgreSQL Flex API

    This is the documentation for the STACKIT postgres service

    The version of the OpenAPI document: 2.0.0
    Contact: support@stackit.cloud
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# Define package exports
__all__ = [
    "DefaultApi",
    "ApiResponse",
    "ApiClient",
    "HostConfiguration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "ACL",
    "ApiConfiguration",
    "ApiExtensionConfigLoadResponse",
    "ApiExtensionConfigureResponse",
    "ApiExtensionDeleteResponse",
    "ApiExtensionList",
    "ApiExtensionLoadResponse",
    "ApiInstallResponse",
    "ApiInstalledListResponse",
    "Backup",
    "CloneInstancePayload",
    "CloneInstanceResponse",
    "CreateDatabasePayload",
    "CreateInstancePayload",
    "CreateInstanceResponse",
    "CreateUserPayload",
    "CreateUserResponse",
    "Error",
    "ExtensionsConfiguration",
    "ExtensionsExtensionListResponse",
    "ExtensionsNewConfig",
    "Flavor",
    "GetBackupResponse",
    "GetUserResponse",
    "Instance",
    "InstanceCreateDatabaseResponse",
    "InstanceDataPoint",
    "InstanceDatabase",
    "InstanceHost",
    "InstanceHostMetric",
    "InstanceListDatabasesResponse",
    "InstanceListInstance",
    "InstanceMetricsResponse",
    "InstanceResponse",
    "ListBackupsResponse",
    "ListFlavorsResponse",
    "ListInstancesResponse",
    "ListStoragesResponse",
    "ListUsersResponse",
    "ListUsersResponseItem",
    "ListVersionsResponse",
    "PartialUpdateInstancePayload",
    "PartialUpdateInstanceResponse",
    "PartialUpdateUserPayload",
    "PostgresDatabaseParameter",
    "PostgresDatabaseParameterResponse",
    "ResetUserResponse",
    "Storage",
    "StorageRange",
    "UpdateBackupSchedulePayload",
    "UpdateInstancePayload",
    "UpdateUserPayload",
    "User",
    "UserResponse",
]

# import apis into sdk package
from stackit.postgresflex.api.default_api import DefaultApi as DefaultApi
from stackit.postgresflex.api_client import ApiClient as ApiClient

# import ApiClient
from stackit.postgresflex.api_response import ApiResponse as ApiResponse
from stackit.postgresflex.configuration import HostConfiguration as HostConfiguration
from stackit.postgresflex.exceptions import ApiAttributeError as ApiAttributeError
from stackit.postgresflex.exceptions import ApiException as ApiException
from stackit.postgresflex.exceptions import ApiKeyError as ApiKeyError
from stackit.postgresflex.exceptions import ApiTypeError as ApiTypeError
from stackit.postgresflex.exceptions import ApiValueError as ApiValueError
from stackit.postgresflex.exceptions import OpenApiException as OpenApiException

# import models into sdk package
from stackit.postgresflex.models.acl import ACL as ACL
from stackit.postgresflex.models.api_configuration import (
    ApiConfiguration as ApiConfiguration,
)
from stackit.postgresflex.models.api_extension_config_load_response import (
    ApiExtensionConfigLoadResponse as ApiExtensionConfigLoadResponse,
)
from stackit.postgresflex.models.api_extension_configure_response import (
    ApiExtensionConfigureResponse as ApiExtensionConfigureResponse,
)
from stackit.postgresflex.models.api_extension_delete_response import (
    ApiExtensionDeleteResponse as ApiExtensionDeleteResponse,
)
from stackit.postgresflex.models.api_extension_list import (
    ApiExtensionList as ApiExtensionList,
)
from stackit.postgresflex.models.api_extension_load_response import (
    ApiExtensionLoadResponse as ApiExtensionLoadResponse,
)
from stackit.postgresflex.models.api_install_response import (
    ApiInstallResponse as ApiInstallResponse,
)
from stackit.postgresflex.models.api_installed_list_response import (
    ApiInstalledListResponse as ApiInstalledListResponse,
)
from stackit.postgresflex.models.backup import Backup as Backup
from stackit.postgresflex.models.clone_instance_payload import (
    CloneInstancePayload as CloneInstancePayload,
)
from stackit.postgresflex.models.clone_instance_response import (
    CloneInstanceResponse as CloneInstanceResponse,
)
from stackit.postgresflex.models.create_database_payload import (
    CreateDatabasePayload as CreateDatabasePayload,
)
from stackit.postgresflex.models.create_instance_payload import (
    CreateInstancePayload as CreateInstancePayload,
)
from stackit.postgresflex.models.create_instance_response import (
    CreateInstanceResponse as CreateInstanceResponse,
)
from stackit.postgresflex.models.create_user_payload import (
    CreateUserPayload as CreateUserPayload,
)
from stackit.postgresflex.models.create_user_response import (
    CreateUserResponse as CreateUserResponse,
)
from stackit.postgresflex.models.error import Error as Error
from stackit.postgresflex.models.extensions_configuration import (
    ExtensionsConfiguration as ExtensionsConfiguration,
)
from stackit.postgresflex.models.extensions_extension_list_response import (
    ExtensionsExtensionListResponse as ExtensionsExtensionListResponse,
)
from stackit.postgresflex.models.extensions_new_config import (
    ExtensionsNewConfig as ExtensionsNewConfig,
)
from stackit.postgresflex.models.flavor import Flavor as Flavor
from stackit.postgresflex.models.get_backup_response import (
    GetBackupResponse as GetBackupResponse,
)
from stackit.postgresflex.models.get_user_response import (
    GetUserResponse as GetUserResponse,
)
from stackit.postgresflex.models.instance import Instance as Instance
from stackit.postgresflex.models.instance_create_database_response import (
    InstanceCreateDatabaseResponse as InstanceCreateDatabaseResponse,
)
from stackit.postgresflex.models.instance_data_point import (
    InstanceDataPoint as InstanceDataPoint,
)
from stackit.postgresflex.models.instance_database import (
    InstanceDatabase as InstanceDatabase,
)
from stackit.postgresflex.models.instance_host import InstanceHost as InstanceHost
from stackit.postgresflex.models.instance_host_metric import (
    InstanceHostMetric as InstanceHostMetric,
)
from stackit.postgresflex.models.instance_list_databases_response import (
    InstanceListDatabasesResponse as InstanceListDatabasesResponse,
)
from stackit.postgresflex.models.instance_list_instance import (
    InstanceListInstance as InstanceListInstance,
)
from stackit.postgresflex.models.instance_metrics_response import (
    InstanceMetricsResponse as InstanceMetricsResponse,
)
from stackit.postgresflex.models.instance_response import (
    InstanceResponse as InstanceResponse,
)
from stackit.postgresflex.models.list_backups_response import (
    ListBackupsResponse as ListBackupsResponse,
)
from stackit.postgresflex.models.list_flavors_response import (
    ListFlavorsResponse as ListFlavorsResponse,
)
from stackit.postgresflex.models.list_instances_response import (
    ListInstancesResponse as ListInstancesResponse,
)
from stackit.postgresflex.models.list_storages_response import (
    ListStoragesResponse as ListStoragesResponse,
)
from stackit.postgresflex.models.list_users_response import (
    ListUsersResponse as ListUsersResponse,
)
from stackit.postgresflex.models.list_users_response_item import (
    ListUsersResponseItem as ListUsersResponseItem,
)
from stackit.postgresflex.models.list_versions_response import (
    ListVersionsResponse as ListVersionsResponse,
)
from stackit.postgresflex.models.partial_update_instance_payload import (
    PartialUpdateInstancePayload as PartialUpdateInstancePayload,
)
from stackit.postgresflex.models.partial_update_instance_response import (
    PartialUpdateInstanceResponse as PartialUpdateInstanceResponse,
)
from stackit.postgresflex.models.partial_update_user_payload import (
    PartialUpdateUserPayload as PartialUpdateUserPayload,
)
from stackit.postgresflex.models.postgres_database_parameter import (
    PostgresDatabaseParameter as PostgresDatabaseParameter,
)
from stackit.postgresflex.models.postgres_database_parameter_response import (
    PostgresDatabaseParameterResponse as PostgresDatabaseParameterResponse,
)
from stackit.postgresflex.models.reset_user_response import (
    ResetUserResponse as ResetUserResponse,
)
from stackit.postgresflex.models.storage import Storage as Storage
from stackit.postgresflex.models.storage_range import StorageRange as StorageRange
from stackit.postgresflex.models.update_backup_schedule_payload import (
    UpdateBackupSchedulePayload as UpdateBackupSchedulePayload,
)
from stackit.postgresflex.models.update_instance_payload import (
    UpdateInstancePayload as UpdateInstancePayload,
)
from stackit.postgresflex.models.update_user_payload import (
    UpdateUserPayload as UpdateUserPayload,
)
from stackit.postgresflex.models.user import User as User
from stackit.postgresflex.models.user_response import UserResponse as UserResponse
